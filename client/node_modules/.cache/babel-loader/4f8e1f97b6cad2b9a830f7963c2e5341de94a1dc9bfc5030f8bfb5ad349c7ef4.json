{"ast":null,"code":"\n\n// import React from 'react'\n// import { useState } from 'react';\n// import { createContext, useContext } from 'react'\n\n// export const ModalsStateContext = createContext([]);\n\n// // modal을 열고 닫는 함수\n// export const ModalsDispatchContext = createContext({\n//     open: () => {},\n//     close: () => {}\n// });\n\n// export const ModalsProvider = ({children}) => {\n//   const [openedModals, setOpenedModals] = useState([]);\n//   const open = (Component, props) => {\n//       setOpenedModals((modals) => {\n//           return [...modals, { Component, props }];\n//       });\n//   }\n//   const close = (Component) => {\n//       setOpenedModals((modals) => {\n//         return modals.filter(modal => modal.Component !== Component);\n//       });\n//   }\n\n//   const dispatch = {open, close};\n//   return (\n//       <ModalsDispatchContext.Provider value={dispatch}>\n//           <ModalsStateContext.Provider value={openedModals}>\n//               {children}\n//           </ModalsStateContext.Provider>\n//       </ModalsDispatchContext.Provider>\n//   );\n// }\n\n// export const Modals = () => {\n//   const openedModals = useContext(ModalsStateContext);\n//   const { close } = useContext(ModalsDispatchContext);\n\n//   return openedModals.map((modal, index) => {\n//       const { Component, props } = modal;\n//       const { onSubmit, ...restProps } = props;\n\n//       const onClose = () => {\n//           close(Component);\n//       }\n//       const handleSubmit = async () => {\n//           if (typeof onSubmit === \"function\") {\n//               await onSubmit();\n//           }\n//           onClose();\n//       };\n\n//       return (\n//           <Component\n//               key={index}\n//               onClose={onClose}\n//               handleSubmit = {handleSubmit}\n//               {...restProps}\n//           />\n\n//       );\n\n//   });\n// }\n\n// export function useModals() {\n//   const { open, close } = useContext(ModalsDispatchContext);\n\n//   const openModal = (Component, props) => {\n//     open(Component, props);\n//   };\n//   const closeModal = (Component) => {\n//     close(Component);\n//   };\n//   return { openModal, closeModal };\n// }","map":{"version":3,"names":[],"sources":["D:/Dropbox/Study/Programming/Toy_Projects/221101_N_Surfer/N-Surfer/client/src/context/ModalContext.jsx"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { useState } from 'react';\r\n// import { createContext, useContext } from 'react'\r\n\r\n// export const ModalsStateContext = createContext([]);\r\n\r\n// // modal을 열고 닫는 함수\r\n// export const ModalsDispatchContext = createContext({\r\n//     open: () => {},\r\n//     close: () => {}\r\n// });\r\n\r\n// export const ModalsProvider = ({children}) => {\r\n//   const [openedModals, setOpenedModals] = useState([]);\r\n//   const open = (Component, props) => {\r\n//       setOpenedModals((modals) => {\r\n//           return [...modals, { Component, props }];\r\n//       });\r\n//   }\r\n//   const close = (Component) => {\r\n//       setOpenedModals((modals) => {\r\n//         return modals.filter(modal => modal.Component !== Component);\r\n//       });\r\n//   }\r\n  \r\n//   const dispatch = {open, close};\r\n//   return (\r\n//       <ModalsDispatchContext.Provider value={dispatch}>\r\n//           <ModalsStateContext.Provider value={openedModals}>\r\n//               {children}\r\n//           </ModalsStateContext.Provider>\r\n//       </ModalsDispatchContext.Provider>\r\n//   );\r\n// }\r\n\r\n// export const Modals = () => {\r\n//   const openedModals = useContext(ModalsStateContext);\r\n//   const { close } = useContext(ModalsDispatchContext);\r\n  \r\n//   return openedModals.map((modal, index) => {\r\n//       const { Component, props } = modal;\r\n//       const { onSubmit, ...restProps } = props;\r\n      \r\n//       const onClose = () => {\r\n//           close(Component);\r\n//       }\r\n//       const handleSubmit = async () => {\r\n//           if (typeof onSubmit === \"function\") {\r\n//               await onSubmit();\r\n//           }\r\n//           onClose();\r\n//       };\r\n      \r\n//       return (\r\n//           <Component\r\n//               key={index}\r\n//               onClose={onClose}\r\n//               handleSubmit = {handleSubmit}\r\n//               {...restProps}\r\n//           />\r\n      \r\n//       );\r\n      \r\n//   });\r\n// }\r\n\r\n// export function useModals() {\r\n//   const { open, close } = useContext(ModalsDispatchContext);\r\n\r\n//   const openModal = (Component, props) => {\r\n//     open(Component, props);\r\n//   };\r\n//   const closeModal = (Component) => {\r\n//     close(Component);\r\n//   };\r\n//   return { openModal, closeModal };\r\n// }\r\n\r\n\r\n"],"mappings":";;AAgBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}